import org.junit.jupiter.api.Assertions
import org.junit.jupiter.params.ParameterizedTest
import org.junit.jupiter.params.provider.CsvSource
import org.junit.jupiter.params.provider.ValueSource
import kotlin.math.abs
import kotlin.math.absoluteValue
import kotlin.math.max

class BaseFunctionsTest {
    @ParameterizedTest
    @CsvSource(
        value = [
            "  0   , 0 ,  1     ",
            "  0.5 , 0 ,  1     ",
            "  1   , 0 ,  1     ",
            "  1.5 , 0 ,  1     ",
            "  2   , 0 ,  1     ",
            "  0.4 , 0 ,  1     ",
            "  0.9 , 0 ,  1     ",
            "  1.4 , 0 ,  1     ",
            "  1.9 , 0 ,  1     ",
            "  0.1 , 0 ,  1     ",
            "  0.6 , 0 ,  1     ",
            "  1.1 , 0 ,  1     ",
            "  1.6 , 0 ,  1     ",
            "  2.1 , 0 ,  1     ",
            " -0.5 , 0 ,  1     ",
            " -1   , 0 ,  1     ",
            " -1.5 , 0 ,  1     ",
            " -2   , 0 ,  1     ",
            " -0.4 , 0 ,  1     ",
            " -0.9 , 0 ,  1     ",
            " -1.4 , 0 ,  1     ",
            " -1.9 , 0 ,  1     ",
            " -0.1 , 0 ,  1     ",
            " -0.6 , 0 ,  1     ",
            " -1.1 , 0 ,  1     ",
            " -1.6 , 0 ,  1     ",
            " -2.1 , 0 ,  1     ",
            "  0   , 1 ,  0     ",
            "  0.5 , 1 ,  0.5   ",
            "  1   , 1 ,  1     ",
            "  1.5 , 1 ,  1.5   ",
            "  2   , 1 ,  2     ",
            "  0.4 , 1 ,  0.4   ",
            "  0.9 , 1 ,  0.9   ",
            "  1.4 , 1 ,  1.4   ",
            "  1.9 , 1 ,  1.9   ",
            "  0.1 , 1 ,  0.1   ",
            "  0.6 , 1 ,  0.6   ",
            "  1.1 , 1 ,  1.1   ",
            "  1.6 , 1 ,  1.6   ",
            "  2.1 , 1 ,  2.1   ",
            " -0.5 , 1 , -0.5   ",
            " -1   , 1 , -1     ",
            " -1.5 , 1 , -1.5   ",
            " -2   , 1 , -2     ",
            " -0.4 , 1 , -0.4   ",
            " -0.9 , 1 , -0.9   ",
            " -1.4 , 1 , -1.4   ",
            " -1.9 , 1 , -1.9   ",
            " -0.1 , 1 , -0.1   ",
            " -0.6 , 1 , -0.6   ",
            " -1.1 , 1 , -1.1   ",
            " -1.6 , 1 , -1.6   ",
            " -2.1 , 1 , -2.1   ",
            "  0   , 2 ,  0     ",
            "  0.5 , 2 ,  0.25  ",
            "  1   , 2 ,  1     ",
            "  1.5 , 2 ,  2.25  ",
            "  2   , 2 ,  4     ",
            "  0.4 , 2 ,  0.16  ",
            "  0.9 , 2 ,  0.81  ",
            "  1.4 , 2 ,  1.96  ",
            "  1.9 , 2 ,  3.61  ",
            "  0.1 , 2 ,  0.01  ",
            "  0.6 , 2 ,  0.36  ",
            "  1.1 , 2 ,  1.21  ",
            "  1.6 , 2 ,  2.56  ",
            "  2.1 , 2 ,  4.41  ",
            " -0.5 , 2 ,  0.25  ",
            " -1   , 2 ,  1     ",
            " -1.5 , 2 ,  2.25  ",
            " -2   , 2 ,  4     ",
            " -0.4 , 2 ,  0.16  ",
            " -0.9 , 2 ,  0.81  ",
            " -1.4 , 2 ,  1.96  ",
            " -1.9 , 2 ,  3.61  ",
            " -0.1 , 2 ,  0.01  ",
            " -0.6 , 2 ,  0.36  ",
            " -1.1 , 2 ,  1.21  ",
            " -1.6 , 2 ,  2.56  ",
            " -2.1 , 2 ,  4.41  ",
            "  0   , 3 ,  0     ",
            "  0.5 , 3 ,  0.125 ",
            "  1   , 3 ,  1     ",
            "  1.5 , 3 ,  3.375 ",
            "  2   , 3 ,  8     ",
            "  0.4 , 3 ,  0.064 ",
            "  0.9 , 3 ,  0.729 ",
            "  1.4 , 3 ,  2.744 ",
            "  1.9 , 3 ,  6.859 ",
            "  0.1 , 3 ,  0.001 ",
            "  0.6 , 3 ,  0.216 ",
            "  1.1 , 3 ,  1.331 ",
            "  1.6 , 3 ,  4.096 ",
            "  2.1 , 3 ,  9.261 ",
            " -0.5 , 3 , -0.125 ",
            " -1   , 3 , -1     ",
            " -1.5 , 3 , -3.375 ",
            " -2   , 3 , -8     ",
            " -0.4 , 3 , -0.064 ",
            " -0.9 , 3 , -0.729 ",
            " -1.4 , 3 , -2.744 ",
            " -1.9 , 3 , -6.859 ",
            " -0.1 , 3 , -0.001 ",
            " -0.6 , 3 , -0.216 ",
            " -1.1 , 3 , -1.331 ",
            " -1.6 , 3 , -4.096 ",
            " -2.1 , 3 , -9.261 ",
        ]
    )
    fun testPow(x: Double, n: Int, expected: Double) {
        Assertions.assertEquals(expected, x.pow(n), 0.02 * max(1.0, abs(expected)))
    }

    @ParameterizedTest
    @CsvSource(
        value = [
            "  0                 ,  1                    ",
            "  0.523598775598299 ,  0.866025403784439    ",
            "  0.785398163397448 ,  0.707106781186548    ",
            "  1.0471975511966   ,  0.5                  ",
            "  1.5707963267949   ,  6.12323399573677E-17 ",
            "  2.0943951023932   , -0.5                  ",
            "  2.35619449019234  , -0.707106781186547    ",
            "  2.61799387799149  , -0.866025403784439    ",
            "  3.14159265358979  , -1                    ",
            "  3.66519142918809  , -0.866025403784439    ",
            "  3.92699081698724  , -0.707106781186548    ",
            "  4.18879020478639  , -0.5                  ",
            "  4.71238898038469  , -1.83697019872103E-16 ",
            "  5.23598775598299  ,  0.5                  ",
            "  5.49778714378214  ,  0.707106781186547    ",
            "  5.75958653158129  ,  0.866025403784438    ",
            " -0.017453292519943 ,  0.999847695156391    ",
            "  0.506145483078356 ,  0.874619707139396    ",
            "  0.767944870877505 ,  0.719339800338651    ",
            "  1.02974425867665  ,  0.515038074910054    ",
            "  1.55334303427495  ,  0.017452406437284    ",
            "  2.07694180987325  , -0.484809620246337    ",
            "  2.3387411976724   , -0.694658370458997    ",
            "  2.60054058547155  , -0.857167300702112    ",
            "  3.12413936106985  , -0.999847695156391    ",
            "  3.64773813666815  , -0.874619707139396    ",
            "  3.9095375244673   , -0.719339800338651    ",
            "  4.17133691226645  , -0.515038074910054    ",
            "  4.69493568786475  , -0.017452406437284    ",
            "  5.21853446346305  ,  0.484809620246337    ",
            "  5.4803338512622   ,  0.694658370458997    ",
            "  5.74213323906134  ,  0.857167300702112    ",
            "  0.017453292519943 ,  0.999847695156391    ",
            "  0.541052068118242 ,  0.857167300702112    ",
            "  0.802851455917391 ,  0.694658370458997    ",
            "  1.06465084371654  ,  0.484809620246337    ",
            "  1.58824961931484  , -0.017452406437284    ",
            "  2.11184839491314  , -0.515038074910054    ",
            "  2.37364778271229  , -0.719339800338651    ",
            "  2.63544717051144  , -0.874619707139396    ",
            "  3.15904594610974  , -0.999847695156391    ",
            "  3.68264472170804  , -0.857167300702112    ",
            "  3.94444410950718  , -0.694658370458998    ",
            "  4.20624349730633  , -0.484809620246338    ",
            "  4.72984227290463  ,  0.017452406437283    ",
            "  5.25344104850293  ,  0.515038074910054    ",
            "  5.51524043630208  ,  0.719339800338651    ",
            "  5.77703982410123  ,  0.874619707139395    ",
            " -6.28318530717959  ,  1                    ",
            " -5.75958653158129  ,  0.866025403784438    ",
            " -5.49778714378214  ,  0.707106781186547    ",
            " -5.23598775598299  ,  0.5                  ",
            " -4.71238898038469  , -1.83697019872103E-16 ",
            " -4.18879020478639  , -0.5                  ",
            " -3.92699081698724  , -0.707106781186548    ",
            " -3.66519142918809  , -0.866025403784439    ",
            " -3.14159265358979  , -1                    ",
            " -2.61799387799149  , -0.866025403784439    ",
            " -2.35619449019234  , -0.707106781186547    ",
            " -2.0943951023932   , -0.5                  ",
            " -1.5707963267949   ,  6.12323399573677E-17 ",
            " -1.0471975511966   ,  0.5                  ",
            " -0.785398163397448 ,  0.707106781186548    ",
            " -0.523598775598299 ,  0.866025403784439    ",
            " -6.30063859969953  ,  0.999847695156391    ",
            " -5.77703982410123  ,  0.874619707139395    ",
            " -5.51524043630208  ,  0.719339800338651    ",
            " -5.25344104850293  ,  0.515038074910054    ",
            " -4.72984227290463  ,  0.017452406437283    ",
            " -4.20624349730633  , -0.484809620246338    ",
            " -3.94444410950718  , -0.694658370458998    ",
            " -3.68264472170804  , -0.857167300702112    ",
            " -3.15904594610974  , -0.999847695156391    ",
            " -2.63544717051144  , -0.874619707139396    ",
            " -2.37364778271229  , -0.719339800338651    ",
            " -2.11184839491314  , -0.515038074910054    ",
            " -1.58824961931484  , -0.017452406437284    ",
            " -1.06465084371654  ,  0.484809620246337    ",
            " -0.802851455917391 ,  0.694658370458997    ",
            " -0.541052068118242 ,  0.857167300702112    ",
            " -6.26573201465964  ,  0.999847695156391    ",
            " -5.74213323906134  ,  0.857167300702112    ",
            " -5.4803338512622   ,  0.694658370458997    ",
            " -5.21853446346305  ,  0.484809620246337    ",
            " -4.69493568786475  , -0.017452406437284    ",
            " -4.17133691226645  , -0.515038074910054    ",
            " -3.9095375244673   , -0.719339800338651    ",
            " -3.64773813666815  , -0.874619707139396    ",
            " -3.12413936106985  , -0.999847695156391    ",
            " -2.60054058547155  , -0.857167300702112    ",
            " -2.3387411976724   , -0.694658370458997    ",
            " -2.07694180987325  , -0.484809620246337    ",
            " -1.55334303427495  ,  0.017452406437284    ",
            " -1.02974425867665  ,  0.515038074910054    ",
            " -0.767944870877505 ,  0.719339800338651    ",
            " -0.506145483078356 ,  0.874619707139396    ",
            "  6.28318530717959  ,  1                    ",
            "  6.80678408277788  ,  0.866025403784439    ",
            "  7.06858347057703  ,  0.707106781186548    ",
            "  7.33038285837618  ,  0.5                  ",
            "  7.85398163397448  ,  3.06161699786838E-16 ",
            "  8.37758040957278  , -0.499999999999999    ",
            "  8.63937979737193  , -0.707106781186547    ",
            "  8.90117918517108  , -0.866025403784439    ",
            "  9.42477796076938  , -1                    ",
            "  9.94837673636768  , -0.866025403784439    ",
            " 10.2101761241668   , -0.707106781186547    ",
            " 10.471975511966    , -0.5                  ",
            " 10.9955742875643   , -4.28626379701574E-16 ",
            " 11.5191730631626   ,  0.499999999999999    ",
            " 11.7809724509617   ,  0.707106781186547    ",
            " 12.0427718387609   ,  0.866025403784439    ",
            "  6.26573201465964  ,  0.999847695156391    ",
            "  6.78933079025794  ,  0.874619707139396    ",
            "  7.05113017805709  ,  0.719339800338651    ",
            "  7.31292956585624  ,  0.515038074910054    ",
            "  7.83652834145454  ,  0.017452406437284    ",
            "  8.36012711705284  , -0.484809620246336    ",
            "  8.62192650485199  , -0.694658370458997    ",
            "  8.88372589265114  , -0.857167300702112    ",
            "  9.40732466824944  , -0.999847695156391    ",
            "  9.93092344384773  , -0.874619707139397    ",
            " 10.1927228316469   , -0.719339800338651    ",
            " 10.454522219446    , -0.515038074910055    ",
            " 10.9781209950443   , -0.017452406437285    ",
            " 11.5017197706426   ,  0.484809620246335    ",
            " 11.7635191584418   ,  0.694658370458997    ",
            " 12.0253185462409   ,  0.857167300702112    ",
            "  6.30063859969953  ,  0.999847695156391    ",
            "  6.82423737529783  ,  0.857167300702113    ",
            "  7.08603676309698  ,  0.694658370458998    ",
            "  7.34783615089613  ,  0.484809620246337    ",
            "  7.87143492649443  , -0.017452406437283    ",
            "  8.39503370209273  , -0.515038074910054    ",
            "  8.65683308989187  , -0.719339800338651    ",
            "  8.91863247769103  , -0.874619707139396    ",
            "  9.44223125328932  , -0.999847695156391    ",
            "  9.96583002888762  , -0.857167300702112    ",
            " 10.2276294166868   , -0.694658370458998    ",
            " 10.4894288044859   , -0.484809620246336    ",
            " 11.0130275800842   ,  0.017452406437284    ",
            " 11.5366263556825   ,  0.515038074910054    ",
            " 11.7984257434817   ,  0.719339800338651    ",
            " 12.0602251312808   ,  0.874619707139396    ",
        ]
    )
    fun testCos(x: Double, expected: Double) {
        Assertions.assertEquals(expected, Algebra(0.01).cos(x), 0.02 * max(1.0, abs(expected)))
    }

    @ParameterizedTest
    @CsvSource(
        value = [
            "   1                 ,  0                 ",
            "   2.71828182845904  ,  1                 ",
            "   7.38905609893065  ,  2                 ",
            "   20.0855369231877  ,  3                 ",
            "   0.367879441171442 , -1                 ",
            "   0.135335283236613 , -2                 ",
            "   0.049787068367864 , -3                 ",
            "   2                 ,  0.693147180559945 ",
            "   5                 ,  1.6094379124341   ",
            "  10                 ,   2.30258509299405 ",
            " 100                 ,  4.60517018598809  ",
            "   0.9               , -0.105360515657826 ",
            "   2.61828182845904  ,  0.962518311983765 ",
            "   7.28905609893065  ,  1.98637405875277  ",
            "   19.9855369231877  ,  2.99500885811151  ",
            "   0.267879441171442 , -1.31721824605773  ",
            "   0.035335283236613 , -3.342873289119    ",
            "   1.9               ,  0.641853886172395 ",
            "   4.9               ,  1.58923520511658  ",
            "   9.9               ,  2.29253475714054  ",
            "  99.9               ,  4.60416968565451  ",
            "   1.1               ,  0.095310179804325 ",
            "   2.81828182845904  ,  1.03612741857483  ",
            "   7.48905609893065  ,  2.01344276808316  ",
            "   20.1855369231877  ,  3.00496635405951  ",
            "   0.467879441171442 , -0.759544620584711 ",
            "   0.235335283236613 , -1.44674404448335  ",
            "   0.149787068367864 , -1.89854053760754  ",
            "   2.1               ,  0.741937344729377 ",
            "   5.1               ,  1.62924053973028  ",
            "  10.1               ,  2.31253542384721  ",
            " 100.1               ,  4.60616968632117  ",
        ]
    )
    fun testLn(x: Double, expected: Double) {
        Assertions.assertEquals(expected, Algebra(0.01).ln(x), 0.1 * abs(expected))
    }

    @ParameterizedTest
    @CsvSource(
        value = [
            " 0 , 0 ",
            " 0.523598775598299 , 0.5 ",
            " 0.785398163397448 , 0.707106781186547 ",
            " 1.0471975511966 , 0.866025403784439 ",
            " 1.5707963267949 , 1 ",
            " 2.0943951023932 , 0.866025403784439 ",
            " 2.35619449019234 , 0.707106781186548 ",
            " 2.61799387799149 , 0.5 ",
            " 3.14159265358979 , 1.22464679914735E-16 ",
            " 3.66519142918809 , -0.5 ",
            " 3.92699081698724 , -0.707106781186547 ",
            " 4.18879020478639 , -0.866025403784438 ",
            " 4.71238898038469 , -1 ",
            " 5.23598775598299 , -0.866025403784439 ",
            " 5.49778714378214 , -0.707106781186548 ",
            " 5.75958653158129 , -0.5 ",
            " -0.017453292519943 , -0.017452406437284 ",
            " 0.506145483078356 , 0.484809620246337 ",
            " 0.767944870877505 , 0.694658370458997 ",
            " 1.02974425867665 , 0.857167300702112 ",
            " 1.55334303427495 , 0.999847695156391 ",
            " 2.07694180987325 , 0.874619707139396 ",
            " 2.3387411976724 , 0.719339800338651 ",
            " 2.60054058547155 , 0.515038074910054 ",
            " 3.12413936106985 , 0.017452406437284 ",
            " 3.64773813666815 , -0.484809620246337 ",
            " 3.9095375244673 , -0.694658370458997 ",
            " 4.17133691226645 , -0.857167300702112 ",
            " 4.69493568786475 , -0.999847695156391 ",
            " 5.21853446346305 , -0.874619707139396 ",
            " 5.4803338512622 , -0.719339800338651 ",
            " 5.74213323906134 , -0.515038074910054 ",
            " 0.017453292519943 , 0.017452406437284 ",
            " 0.541052068118242 , 0.515038074910054 ",
            " 0.802851455917391 , 0.719339800338651 ",
            " 1.06465084371654 , 0.874619707139396 ",
            " 1.58824961931484 , 0.999847695156391 ",
            " 2.11184839491314 , 0.857167300702112 ",
            " 2.37364778271229 , 0.694658370458997 ",
            " 2.63544717051144 , 0.484809620246337 ",
            " 3.15904594610974 , -0.017452406437283 ",
            " 3.68264472170804 , -0.515038074910054 ",
            " 3.94444410950718 , -0.719339800338651 ",
            " 4.20624349730633 , -0.874619707139395 ",
            " 4.72984227290463 , -0.999847695156391 ",
            " 5.25344104850293 , -0.857167300702112 ",
            " 5.51524043630208 , -0.694658370458998 ",
            " 5.77703982410123 , -0.484809620246338 ",
            " -6.28318530717959 , 2.44929359829471E-16 ",
            " -5.75958653158129 , 0.5 ",
            " -5.49778714378214 , 0.707106781186548 ",
            " -5.23598775598299 , 0.866025403784439 ",
            " -4.71238898038469 , 1 ",
            " -4.18879020478639 , 0.866025403784438 ",
            " -3.92699081698724 , 0.707106781186547 ",
            " -3.66519142918809 , 0.5 ",
            " -3.14159265358979 , -1.22464679914735E-16 ",
            " -2.61799387799149 , -0.5 ",
            " -2.35619449019234 , -0.707106781186548 ",
            " -2.0943951023932 , -0.866025403784439 ",
            " -1.5707963267949 , -1 ",
            " -1.0471975511966 , -0.866025403784439 ",
            " -0.785398163397448 , -0.707106781186547 ",
            " -0.523598775598299 , -0.5 ",
            " -6.30063859969953 , -0.017452406437283 ",
            " -5.77703982410123 , 0.484809620246338 ",
            " -5.51524043630208 , 0.694658370458998 ",
            " -5.25344104850293 , 0.857167300702112 ",
            " -4.72984227290463 , 0.999847695156391 ",
            " -4.20624349730633 , 0.874619707139395 ",
            " -3.94444410950718 , 0.719339800338651 ",
            " -3.68264472170804 , 0.515038074910054 ",
            " -3.15904594610974 , 0.017452406437283 ",
            " -2.63544717051144 , -0.484809620246337 ",
            " -2.37364778271229 , -0.694658370458997 ",
            " -2.11184839491314 , -0.857167300702112 ",
            " -1.58824961931484 , -0.999847695156391 ",
            " -1.06465084371654 , -0.874619707139396 ",
            " -0.802851455917391 , -0.719339800338651 ",
            " -0.541052068118242 , -0.515038074910054 ",
            " -6.26573201465964 , 0.017452406437284 ",
            " -5.74213323906134 , 0.515038074910054 ",
            " -5.4803338512622 , 0.719339800338651 ",
            " -5.21853446346305 , 0.874619707139396 ",
            " -4.69493568786475 , 0.999847695156391 ",
            " -4.17133691226645 , 0.857167300702112 ",
            " -3.9095375244673 , 0.694658370458997 ",
            " -3.64773813666815 , 0.484809620246337 ",
            " -3.12413936106985 , -0.017452406437284 ",
            " -2.60054058547155 , -0.515038074910054 ",
            " -2.3387411976724 , -0.719339800338651 ",
            " -2.07694180987325 , -0.874619707139396 ",
            " -1.55334303427495 , -0.999847695156391 ",
            " -1.02974425867665 , -0.857167300702112 ",
            " -0.767944870877505 , -0.694658370458997 ",
            " -0.506145483078356 , -0.484809620246337 ",
            " 6.28318530717959 , -2.44929359829471E-16 ",
            " 6.80678408277788 , 0.499999999999999 ",
            " 7.06858347057703 , 0.707106781186547 ",
            " 7.33038285837618 , 0.866025403784439 ",
            " 7.85398163397448 , 1 ",
            " 8.37758040957278 , 0.866025403784439 ",
            " 8.63937979737193 , 0.707106781186548 ",
            " 8.90117918517108 , 0.5 ",
            " 9.42477796076938 , 3.67394039744206E-16 ",
            " 9.94837673636768 , -0.499999999999999 ",
            " 10.2101761241668 , -0.707106781186548 ",
            " 10.471975511966 , -0.866025403784439 ",
            " 10.9955742875643 , -1 ",
            " 11.5191730631626 , -0.866025403784439 ",
            " 11.7809724509617 , -0.707106781186548 ",
            " 12.0427718387609 , -0.5 ",
            " 6.26573201465964 , -0.017452406437284 ",
            " 6.78933079025794 , 0.484809620246336 ",
            " 7.05113017805709 , 0.694658370458997 ",
            " 7.31292956585624 , 0.857167300702113 ",
            " 7.83652834145454 , 0.999847695156391 ",
            " 8.36012711705284 , 0.874619707139397 ",
            " 8.62192650485199 , 0.719339800338651 ",
            " 8.88372589265114 , 0.515038074910055 ",
            " 9.40732466824944 , 0.017452406437285 ",
            " 9.93092344384773 , -0.484809620246336 ",
            " 10.1927228316469 , -0.694658370458997 ",
            " 10.454522219446 , -0.857167300702112 ",
            " 10.9781209950443 , -0.999847695156391 ",
            " 11.5017197706426 , -0.874619707139397 ",
            " 11.7635191584418 , -0.719339800338651 ",
            " 12.0253185462409 , -0.515038074910055 ",
            " 6.30063859969953 , 0.017452406437283 ",
            " 6.82423737529783 , 0.515038074910053 ",
            " 7.08603676309698 , 0.719339800338651 ",
            " 7.34783615089613 , 0.874619707139396 ",
            " 7.87143492649443 , 0.999847695156391 ",
            " 8.39503370209273 , 0.857167300702112 ",
            " 8.65683308989187 , 0.694658370458998 ",
            " 8.91863247769103 , 0.484809620246336 ",
            " 9.44223125328932 , -0.017452406437284 ",
            " 9.96583002888762 , -0.515038074910054 ",
            " 10.2276294166868 , -0.719339800338651 ",
            " 10.4894288044859 , -0.874619707139396 ",
            " 11.0130275800842 , -0.999847695156391 ",
            " 11.5366263556825 , -0.857167300702112 ",
            " 11.7984257434817 , -0.694658370458998 ",
            " 12.0602251312808 , -0.484809620246336 ",
        ]
    )
    fun testSin(x: Double, expected: Double) {
        Assertions.assertEquals(expected, Algebra(0.01).sin(x), 0.02 * max(1.0, abs(expected)))
    }

    @ParameterizedTest
    @CsvSource(
        value = [
            " 0 , 1 ",
            " 0.523598775598299 , 1.15470053837925 ",
            " 0.785398163397448 , 1.4142135623731 ",
            " 1.0471975511966 , 2 ",
            " 2.0943951023932 , -2 ",
            " 2.35619449019234 , -1.4142135623731 ",
            " 2.61799387799149 , -1.15470053837925 ",
            " 3.14159265358979 , -1 ",
            " 3.66519142918809 , -1.15470053837925 ",
            " 3.92699081698724 , -1.41421356237309 ",
            " 4.18879020478639 , -2 ",
            " 5.23598775598299 , 2 ",
            " 5.49778714378214 , 1.4142135623731 ",
            " 5.75958653158129 , 1.15470053837925 ",
            " -0.017453292519943 , 1.00015232804391 ",
            " 0.506145483078356 , 1.14335406787332 ",
            " 0.767944870877505 , 1.39016359101668 ",
            " 1.02974425867665 , 1.94160402641036 ",
            " 1.55334303427495 , 57.2986884985499 ",
            " 2.07694180987325 , -2.06266533962731 ",
            " 2.3387411976724 , -1.43955653962573 ",
            " 2.60054058547155 , -1.16663339721533 ",
            " 3.12413936106985 , -1.00015232804391 ",
            " 3.64773813666815 , -1.14335406787332 ",
            " 3.9095375244673 , -1.39016359101668 ",
            " 4.17133691226645 , -1.94160402641036 ",
            " 4.69493568786475 , -57.2986884985502 ",
            " 5.21853446346305 , 2.06266533962731 ",
            " 5.4803338512622 , 1.43955653962573 ",
            " 5.74213323906134 , 1.16663339721533 ",
            " 0.017453292519943 , 1.00015232804391 ",
            " 0.541052068118242 , 1.16663339721533 ",
            " 0.802851455917391 , 1.43955653962573 ",
            " 1.06465084371654 , 2.06266533962731 ",
            " 1.58824961931484 , -57.2986884985503 ",
            " 2.11184839491314 , -1.94160402641036 ",
            " 2.37364778271229 , -1.39016359101668 ",
            " 2.63544717051144 , -1.14335406787332 ",
            " 3.15904594610974 , -1.00015232804391 ",
            " 3.68264472170804 , -1.16663339721533 ",
            " 3.94444410950718 , -1.43955653962573 ",
            " 4.20624349730633 , -2.06266533962731 ",
            " 4.72984227290463 , 57.2986884985514 ",
            " 5.25344104850293 , 1.94160402641036 ",
            " 5.51524043630208 , 1.39016359101668 ",
            " 5.77703982410123 , 1.14335406787332 ",
            " -6.28318530717959 , 1 ",
            " -5.75958653158129 , 1.15470053837925 ",
            " -5.49778714378214 , 1.4142135623731 ",
            " -5.23598775598299 , 2 ",
            " -4.18879020478639 , -2 ",
            " -3.92699081698724 , -1.41421356237309 ",
            " -3.66519142918809 , -1.15470053837925 ",
            " -3.14159265358979 , -1 ",
            " -2.61799387799149 , -1.15470053837925 ",
            " -2.35619449019234 , -1.4142135623731 ",
            " -2.0943951023932 , -2 ",
            " -1.0471975511966 , 2 ",
            " -0.785398163397448 , 1.4142135623731 ",
            " -0.523598775598299 , 1.15470053837925 ",
            " -6.30063859969953 , 1.00015232804391 ",
            " -5.77703982410123 , 1.14335406787332 ",
            " -5.51524043630208 , 1.39016359101668 ",
            " -5.25344104850293 , 1.94160402641036 ",
            " -4.72984227290463 , 57.2986884985514 ",
            " -4.20624349730633 , -2.06266533962731 ",
            " -3.94444410950718 , -1.43955653962573 ",
            " -3.68264472170804 , -1.16663339721533 ",
            " -3.15904594610974 , -1.00015232804391 ",
            " -2.63544717051144 , -1.14335406787332 ",
            " -2.37364778271229 , -1.39016359101668 ",
            " -2.11184839491314 , -1.94160402641036 ",
            " -1.58824961931484 , -57.2986884985503 ",
            " -1.06465084371654 , 2.06266533962731 ",
            " -0.802851455917391 , 1.43955653962573 ",
            " -0.541052068118242 , 1.16663339721533 ",
            " -6.26573201465964 , 1.00015232804391 ",
            " -5.74213323906134 , 1.16663339721533 ",
            " -5.4803338512622 , 1.43955653962573 ",
            " -5.21853446346305 , 2.06266533962731 ",
            " -4.69493568786475 , -57.2986884985502 ",
            " -4.17133691226645 , -1.94160402641036 ",
            " -3.9095375244673 , -1.39016359101668 ",
            " -3.64773813666815 , -1.14335406787332 ",
            " -3.12413936106985 , -1.00015232804391 ",
            " -2.60054058547155 , -1.16663339721533 ",
            " -2.3387411976724 , -1.43955653962573 ",
            " -2.07694180987325 , -2.06266533962731 ",
            " -1.55334303427495 , 57.2986884985499 ",
            " -1.02974425867665 , 1.94160402641036 ",
            " -0.767944870877505 , 1.39016359101668 ",
            " -0.506145483078356 , 1.14335406787332 ",
            " 6.28318530717959 , 1 ",
            " 6.80678408277788 , 1.15470053837925 ",
            " 7.06858347057703 , 1.41421356237309 ",
            " 7.33038285837618 , 2 ",
            " 8.37758040957278 , -2 ",
            " 8.63937979737193 , -1.4142135623731 ",
            " 8.90117918517108 , -1.15470053837925 ",
            " 9.42477796076938 , -1 ",
            " 9.94837673636768 , -1.15470053837925 ",
            " 10.2101761241668 , -1.4142135623731 ",
            " 10.471975511966 , -2 ",
            " 11.5191730631626 , 2 ",
            " 11.7809724509617 , 1.4142135623731 ",
            " 12.0427718387609 , 1.15470053837925 ",
            " 6.26573201465964 , 1.00015232804391 ",
            " 6.78933079025794 , 1.14335406787332 ",
            " 7.05113017805709 , 1.39016359101668 ",
            " 7.31292956585624 , 1.94160402641036 ",
            " 7.83652834145454 , 57.2986884985498 ",
            " 8.36012711705284 , -2.06266533962732 ",
            " 8.62192650485199 , -1.43955653962573 ",
            " 8.88372589265114 , -1.16663339721533 ",
            " 9.40732466824944 , -1.00015232804391 ",
            " 9.93092344384773 , -1.14335406787332 ",
            " 10.1927228316469 , -1.39016359101668 ",
            " 10.454522219446 , -1.94160402641036 ",
            " 10.9781209950443 , -57.2986884985465 ",
            " 11.5017197706426 , 2.06266533962732 ",
            " 11.7635191584418 , 1.43955653962573 ",
            " 12.0253185462409 , 1.16663339721533 ",
            " 6.30063859969953 , 1.00015232804391 ",
            " 6.82423737529783 , 1.16663339721533 ",
            " 7.08603676309698 , 1.43955653962573 ",
            " 7.34783615089613 , 2.06266533962731 ",
            " 7.87143492649443 , -57.2986884985518 ",
            " 8.39503370209273 , -1.94160402641036 ",
            " 8.65683308989187 , -1.39016359101668 ",
            " 8.91863247769103 , -1.14335406787332 ",
            " 9.44223125328932 , -1.00015232804391 ",
            " 9.96583002888762 , -1.16663339721533 ",
            " 10.2276294166868 , -1.43955653962573 ",
            " 10.4894288044859 , -2.06266533962732 ",
            " 11.0130275800842 , 57.2986884985493 ",
            " 11.5366263556825 , 1.94160402641036 ",
            " 11.7984257434817 , 1.39016359101668 ",
            " 12.0602251312808 , 1.14335406787332 ",
        ]
    )
    fun testSec(x: Double, expected: Double) {
        Assertions.assertEquals(expected, Algebra(0.01).sec(x), 0.02 * max(1.0, abs(expected)))
    }

    @ParameterizedTest
    @ValueSource(
        doubles = [
            1.5707963267949,
            4.71238898038469,
            -4.71238898038469,
            -1.5707963267949,
            7.85398163397448,
            10.9955742875643,
        ]
    )
    fun testSecInfinity(x: Double) {
        Assertions.assertTrue(abs(Algebra(0.01).sec(x)) > 1e10)
    }

    @ParameterizedTest
    @CsvSource(
        value = [
            " 0.523598775598299 , 2 ",
            " 0.785398163397448 , 1.4142135623731 ",
            " 1.0471975511966 , 1.15470053837925 ",
            " 1.5707963267949 , 1 ",
            " 2.0943951023932 , 1.15470053837925 ",
            " 2.35619449019234 , 1.4142135623731 ",
            " 2.61799387799149 , 2 ",
            " 3.66519142918809 , -2 ",
            " 3.92699081698724 , -1.4142135623731 ",
            " 4.18879020478639 , -1.15470053837925 ",
            " 4.71238898038469 , -1 ",
            " 5.23598775598299 , -1.15470053837925 ",
            " 5.49778714378214 , -1.41421356237309 ",
            " 5.75958653158129 , -2 ",
            " -0.017453292519943 , -57.2986884985502 ",
            " 0.506145483078356 , 2.06266533962731 ",
            " 0.767944870877505 , 1.43955653962573 ",
            " 1.02974425867665 , 1.16663339721533 ",
            " 1.55334303427495 , 1.00015232804391 ",
            " 2.07694180987325 , 1.14335406787332 ",
            " 2.3387411976724 , 1.39016359101668 ",
            " 2.60054058547155 , 1.94160402641036 ",
            " 3.12413936106985 , 57.2986884985504 ",
            " 3.64773813666815 , -2.06266533962731 ",
            " 3.9095375244673 , -1.43955653962573 ",
            " 4.17133691226645 , -1.16663339721533 ",
            " 4.69493568786475 , -1.00015232804391 ",
            " 5.21853446346305 , -1.14335406787332 ",
            " 5.4803338512622 , -1.39016359101668 ",
            " 5.74213323906134 , -1.94160402641036 ",
            " 0.017453292519943 , 57.2986884985502 ",
            " 0.541052068118242 , 1.94160402641036 ",
            " 0.802851455917391 , 1.39016359101668 ",
            " 1.06465084371654 , 1.14335406787332 ",
            " 1.58824961931484 , 1.00015232804391 ",
            " 2.11184839491314 , 1.16663339721533 ",
            " 2.37364778271229 , 1.43955653962573 ",
            " 2.63544717051144 , 2.06266533962731 ",
            " 3.15904594610974 , -57.2986884985512 ",
            " 3.68264472170804 , -1.94160402641036 ",
            " 3.94444410950718 , -1.39016359101668 ",
            " 4.20624349730633 , -1.14335406787332 ",
            " 4.72984227290463 , -1.00015232804391 ",
            " 5.25344104850293 , -1.16663339721533 ",
            " 5.51524043630208 , -1.43955653962573 ",
            " 5.77703982410123 , -2.06266533962731 ",
            " -5.75958653158129 , 2 ",
            " -5.49778714378214 , 1.41421356237309 ",
            " -5.23598775598299 , 1.15470053837925 ",
            " -4.71238898038469 , 1 ",
            " -4.18879020478639 , 1.15470053837925 ",
            " -3.92699081698724 , 1.4142135623731 ",
            " -3.66519142918809 , 2 ",
            " -2.61799387799149 , -2 ",
            " -2.35619449019234 , -1.4142135623731 ",
            " -2.0943951023932 , -1.15470053837925 ",
            " -1.5707963267949 , -1 ",
            " -1.0471975511966 , -1.15470053837925 ",
            " -0.785398163397448 , -1.4142135623731 ",
            " -0.523598775598299 , -2 ",
            " -6.30063859969953 , -57.2986884985516 ",
            " -5.77703982410123 , 2.06266533962731 ",
            " -5.51524043630208 , 1.43955653962573 ",
            " -5.25344104850293 , 1.16663339721533 ",
            " -4.72984227290463 , 1.00015232804391 ",
            " -4.20624349730633 , 1.14335406787332 ",
            " -3.94444410950718 , 1.39016359101668 ",
            " -3.68264472170804 , 1.94160402641036 ",
            " -3.15904594610974 , 57.2986884985512 ",
            " -2.63544717051144 , -2.06266533962731 ",
            " -2.37364778271229 , -1.43955653962573 ",
            " -2.11184839491314 , -1.16663339721533 ",
            " -1.58824961931484 , -1.00015232804391 ",
            " -1.06465084371654 , -1.14335406787332 ",
            " -0.802851455917391 , -1.39016359101668 ",
            " -0.541052068118242 , -1.94160402641036 ",
            " -6.26573201465964 , 57.29868849855 ",
            " -5.74213323906134 , 1.94160402641036 ",
            " -5.4803338512622 , 1.39016359101668 ",
            " -5.21853446346305 , 1.14335406787332 ",
            " -4.69493568786475 , 1.00015232804391 ",
            " -4.17133691226645 , 1.16663339721533 ",
            " -3.9095375244673 , 1.43955653962573 ",
            " -3.64773813666815 , 2.06266533962731 ",
            " -3.12413936106985 , -57.2986884985504 ",
            " -2.60054058547155 , -1.94160402641036 ",
            " -2.3387411976724 , -1.39016359101668 ",
            " -2.07694180987325 , -1.14335406787332 ",
            " -1.55334303427495 , -1.00015232804391 ",
            " -1.02974425867665 , -1.16663339721533 ",
            " -0.767944870877505 , -1.43955653962573 ",
            " -0.506145483078356 , -2.06266533962731 ",
            " 6.80678408277788 , 2 ",
            " 7.06858347057703 , 1.4142135623731 ",
            " 7.33038285837618 , 1.15470053837925 ",
            " 7.85398163397448 , 1 ",
            " 8.37758040957278 , 1.15470053837925 ",
            " 8.63937979737193 , 1.41421356237309 ",
            " 8.90117918517108 , 2 ",
            " 9.94837673636768 , -2 ",
            " 10.2101761241668 , -1.41421356237309 ",
            " 10.471975511966 , -1.15470053837925 ",
            " 10.9955742875643 , -1 ",
            " 11.5191730631626 , -1.15470053837925 ",
            " 11.7809724509617 , -1.41421356237309 ",
            " 12.0427718387609 , -2 ",
            " 6.26573201465964 , -57.29868849855 ",
            " 6.78933079025794 , 2.06266533962732 ",
            " 7.05113017805709 , 1.43955653962573 ",
            " 7.31292956585624 , 1.16663339721533 ",
            " 7.83652834145454 , 1.00015232804391 ",
            " 8.36012711705284 , 1.14335406787332 ",
            " 8.62192650485199 , 1.39016359101668 ",
            " 8.88372589265114 , 1.94160402641036 ",
            " 9.40732466824944 , 57.2986884985467 ",
            " 9.93092344384773 , -2.06266533962732 ",
            " 10.1927228316469 , -1.43955653962573 ",
            " 10.454522219446 , -1.16663339721533 ",
            " 10.9781209950443 , -1.00015232804391 ",
            " 11.5017197706426 , -1.14335406787332 ",
            " 11.7635191584418 , -1.39016359101668 ",
            " 12.0253185462409 , -1.94160402641035 ",
            " 6.30063859969953 , 57.2986884985516 ",
            " 6.82423737529783 , 1.94160402641036 ",
            " 7.08603676309698 , 1.39016359101668 ",
            " 7.34783615089613 , 1.14335406787332 ",
            " 7.87143492649443 , 1.00015232804391 ",
            " 8.39503370209273 , 1.16663339721533 ",
            " 8.65683308989187 , 1.43955653962573 ",
            " 8.91863247769103 , 2.06266533962732 ",
            " 9.44223125328932 , -57.2986884985491 ",
            " 9.96583002888762 , -1.94160402641036 ",
            " 10.2276294166868 , -1.39016359101668 ",
            " 10.4894288044859 , -1.14335406787332 ",
            " 11.0130275800842 , -1.00015232804391 ",
            " 11.5366263556825 , -1.16663339721533 ",
            " 11.7984257434817 , -1.43955653962573 ",
            " 12.0602251312808 , -2.06266533962732 ",
        ]
    )
    fun testCsc(x: Double, expected: Double) {
        Assertions.assertEquals(expected, Algebra(0.01).csc(x), 0.02 * max(1.0, abs(expected)))
    }

    @ParameterizedTest
    @ValueSource(
        doubles = [
            0.0,
            3.14159265358979,
            -6.28318530717959,
            -3.14159265358979,
            6.28318530717959,
            9.42477796076938,
        ]
    )
    fun testCscInfinity(x: Double) {
        Assertions.assertTrue(abs(Algebra(0.01).csc(x)) > 1e10)
    }

    @ParameterizedTest
    @CsvSource(
        value = [
            " 0 , 0 ",
            " 0.523598775598299 , 0.577350269189626 ",
            " 0.785398163397448 , 1 ",
            " 1.0471975511966 , 1.73205080756888 ",
            " 2.0943951023932 , -1.73205080756888 ",
            " 2.35619449019234 , -1 ",
            " 2.61799387799149 , -0.577350269189626 ",
            " 3.14159265358979 , -1.22464679914735E-16 ",
            " 3.66519142918809 , 0.577350269189626 ",
            " 3.92699081698724 , 1 ",
            " 4.18879020478639 , 1.73205080756888 ",
            " 5.23598775598299 , -1.73205080756888 ",
            " 5.49778714378214 , -1 ",
            " 5.75958653158129 , -0.577350269189626 ",
            " -0.017453292519943 , -0.017455064928218 ",
            " 0.506145483078356 , 0.554309051452769 ",
            " 0.767944870877505 , 0.965688774807074 ",
            " 1.02974425867665 , 1.66427948235052 ",
            " 1.55334303427495 , 57.2899616307591 ",
            " 2.07694180987325 , -1.80404775527142 ",
            " 2.3387411976724 , -1.03553031379057 ",
            " 2.60054058547155 , -0.600860619027561 ",
            " 3.12413936106985 , -0.017455064928218 ",
            " 3.64773813666815 , 0.554309051452769 ",
            " 3.9095375244673 , 0.965688774807074 ",
            " 4.17133691226645 , 1.66427948235052 ",
            " 4.69493568786475 , 57.2899616307595 ",
            " 5.21853446346305 , -1.80404775527142 ",
            " 5.4803338512622 , -1.03553031379057 ",
            " 5.74213323906134 , -0.600860619027561 ",
            " 0.017453292519943 , 0.017455064928218 ",
            " 0.541052068118242 , 0.60086061902756 ",
            " 0.802851455917391 , 1.03553031379057 ",
            " 1.06465084371654 , 1.80404775527142 ",
            " 1.58824961931484 , -57.2899616307596 ",
            " 2.11184839491314 , -1.66427948235052 ",
            " 2.37364778271229 , -0.965688774807075 ",
            " 2.63544717051144 , -0.554309051452769 ",
            " 3.15904594610974 , 0.017455064928217 ",
            " 3.68264472170804 , 0.60086061902756 ",
            " 3.94444410950718 , 1.03553031379057 ",
            " 4.20624349730633 , 1.80404775527142 ",
            " 4.72984227290463 , -57.2899616307607 ",
            " 5.25344104850293 , -1.66427948235052 ",
            " 5.51524043630208 , -0.965688774807075 ",
            " 5.77703982410123 , -0.55430905145277 ",
            " -6.28318530717959 , 2.44929359829471E-16 ",
            " -5.75958653158129 , 0.577350269189626 ",
            " -5.49778714378214 , 1 ",
            " -5.23598775598299 , 1.73205080756888 ",
            " -4.18879020478639 , -1.73205080756888 ",
            " -3.92699081698724 , -1 ",
            " -3.66519142918809 , -0.577350269189626 ",
            " -3.14159265358979 , 1.22464679914735E-16 ",
            " -2.61799387799149 , 0.577350269189626 ",
            " -2.35619449019234 , 1 ",
            " -2.0943951023932 , 1.73205080756888 ",
            " -1.0471975511966 , -1.73205080756888 ",
            " -0.785398163397448 , -1 ",
            " -0.523598775598299 , -0.577350269189626 ",
            " -6.30063859969953 , -0.017455064928217 ",
            " -5.77703982410123 , 0.55430905145277 ",
            " -5.51524043630208 , 0.965688774807075 ",
            " -5.25344104850293 , 1.66427948235052 ",
            " -4.72984227290463 , 57.2899616307607 ",
            " -4.20624349730633 , -1.80404775527142 ",
            " -3.94444410950718 , -1.03553031379057 ",
            " -3.68264472170804 , -0.60086061902756 ",
            " -3.15904594610974 , -0.017455064928217 ",
            " -2.63544717051144 , 0.554309051452769 ",
            " -2.37364778271229 , 0.965688774807075 ",
            " -2.11184839491314 , 1.66427948235052 ",
            " -1.58824961931484 , 57.2899616307596 ",
            " -1.06465084371654 , -1.80404775527142 ",
            " -0.802851455917391 , -1.03553031379057 ",
            " -0.541052068118242 , -0.60086061902756 ",
            " -6.26573201465964 , 0.017455064928218 ",
            " -5.74213323906134 , 0.600860619027561 ",
            " -5.4803338512622 , 1.03553031379057 ",
            " -5.21853446346305 , 1.80404775527142 ",
            " -4.69493568786475 , -57.2899616307595 ",
            " -4.17133691226645 , -1.66427948235052 ",
            " -3.9095375244673 , -0.965688774807074 ",
            " -3.64773813666815 , -0.554309051452769 ",
            " -3.12413936106985 , 0.017455064928218 ",
            " -2.60054058547155 , 0.600860619027561 ",
            " -2.3387411976724 , 1.03553031379057 ",
            " -2.07694180987325 , 1.80404775527142 ",
            " -1.55334303427495 , -57.2899616307591 ",
            " -1.02974425867665 , -1.66427948235052 ",
            " -0.767944870877505 , -0.965688774807074 ",
            " -0.506145483078356 , -0.554309051452769 ",
            " 6.28318530717959 , -2.44929359829471E-16 ",
            " 6.80678408277788 , 0.577350269189625 ",
            " 7.06858347057703 , 1 ",
            " 7.33038285837618 , 1.73205080756888 ",
            " 8.37758040957278 , -1.73205080756888 ",
            " 8.63937979737193 , -1 ",
            " 8.90117918517108 , -0.577350269189625 ",
            " 9.42477796076938 , -3.67394039744206E-16 ",
            " 9.94837673636768 , 0.577350269189625 ",
            " 10.2101761241668 , 1 ",
            " 10.471975511966 , 1.73205080756888 ",
            " 11.5191730631626 , -1.73205080756888 ",
            " 11.7809724509617 , -1 ",
            " 12.0427718387609 , -0.577350269189626 ",
            " 6.26573201465964 , -0.017455064928218 ",
            " 6.78933079025794 , 0.554309051452768 ",
            " 7.05113017805709 , 0.965688774807074 ",
            " 7.31292956585624 , 1.66427948235052 ",
            " 7.83652834145454 , 57.2899616307591 ",
            " 8.36012711705284 , -1.80404775527143 ",
            " 8.62192650485199 , -1.03553031379057 ",
            " 8.88372589265114 , -0.600860619027561 ",
            " 9.40732466824944 , -0.017455064928219 ",
            " 9.93092344384773 , 0.554309051452767 ",
            " 10.1927228316469 , 0.965688774807074 ",
            " 10.454522219446 , 1.66427948235052 ",
            " 10.9781209950443 , 57.2899616307558 ",
            " 11.5017197706426 , -1.80404775527143 ",
            " 11.7635191584418 , -1.03553031379057 ",
            " 12.0253185462409 , -0.600860619027561 ",
            " 6.30063859969953 , 0.017455064928217 ",
            " 6.82423737529783 , 0.600860619027559 ",
            " 7.08603676309698 , 1.03553031379057 ",
            " 7.34783615089613 , 1.80404775527142 ",
            " 7.87143492649443 , -57.2899616307611 ",
            " 8.39503370209273 , -1.66427948235052 ",
            " 8.65683308989187 , -0.965688774807075 ",
            " 8.91863247769103 , -0.554309051452768 ",
            " 9.44223125328932 , 0.017455064928218 ",
            " 9.96583002888762 , 0.60086061902756 ",
            " 10.2276294166868 , 1.03553031379057 ",
            " 10.4894288044859 , 1.80404775527143 ",
            " 11.0130275800842 , -57.2899616307586 ",
            " 11.5366263556825 , -1.66427948235052 ",
            " 11.7984257434817 , -0.965688774807075 ",
            " 12.0602251312808 , -0.554309051452768 ",
        ]
    )
    fun testTan(x: Double, expected: Double) {
        Assertions.assertEquals(expected, Algebra(0.01).tan(x), 0.02 * max(1.0, abs(expected)))
    }

    @ParameterizedTest
    @ValueSource(
        doubles = [
            1.5707963267949,
            4.71238898038469,
            -4.71238898038469,
            -1.5707963267949,
            7.85398163397448,
            10.9955742875643,
        ]
    )
    fun testTanInfinity(x: Double) {
        Assertions.assertTrue(abs(Algebra(0.01).tan(x)) > 1e10)
    }

    @ParameterizedTest
    @CsvSource(
        value = [
            " 1 , 2 , 0 ",
            " 2.71828182845904 , 2 , 1.44269504088896 ",
            " 7.38905609893065 , 2 , 2.88539008177793 ",
            " 20.0855369231877 , 2 , 4.32808512266689 ",
            " 0.367879441171442 , 2 , -1.44269504088896 ",
            " 0.135335283236613 , 2 , -2.88539008177793 ",
            " 0.049787068367864 , 2 , -4.32808512266689 ",
            " 2 , 2 , 1 ",
            " 5 , 2 , 2.32192809488736 ",
            " 10 , 2 , 3.32192809488736 ",
            " 100 , 2 , 6.64385618977473 ",
            " 0.9 , 2 , -0.15200309344505 ",
            " 2.61828182845904 , 2 , 1.38862039546379 ",
            " 7.28905609893065 , 2 , 2.8657320039131 ",
            " 19.9855369231877 , 2 , 4.32088442701599 ",
            " 0.267879441171442 , 2 , -1.90034423135595 ",
            " 0.035335283236613 , 2 , -4.82274671653216 ",
            " 1.9 , 2 , 0.925999418556223 ",
            " 4.9 , 2 , 2.29278174922785 ",
            " 9.9 , 2 , 3.30742852519225 ",
            " 99.9 , 2 , 6.64241277290506 ",
            " 1.1 , 2 , 0.137503523749935 ",
            " 2.81828182845904 , 2 , 1.494815888507 ",
            " 7.48905609893065 , 2 , 2.90478389662733 ",
            " 20.1855369231877 , 2 , 4.33525005703984 ",
            " 0.467879441171442 , 2 , -1.09579125745145 ",
            " 0.235335283236613 , 2 , -2.08721045841176 ",
            " 0.149787068367864 , 2 , -2.73901501853306 ",
            " 2.1 , 2 , 1.0703893278914 ",
            " 5.1 , 2 , 2.35049724708413 ",
            " 10.1 , 2 , 3.33628338786443 ",
            " 100.1 , 2 , 6.64529816394863 ",
            " 1 , 5 , 0 ",
            " 2.71828182845904 , 5 , 0.621334934559612 ",
            " 7.38905609893065 , 5 , 1.24266986911922 ",
            " 20.0855369231877 , 5 , 1.86400480367884 ",
            " 0.367879441171442 , 5 , -0.621334934559612 ",
            " 0.135335283236613 , 5 , -1.24266986911922 ",
            " 0.049787068367864 , 5 , -1.86400480367884 ",
            " 2 , 5 , 0.430676558073393 ",
            " 5 , 5 , 1 ",
            " 10 , 5 , 1.43067655807339 ",
            " 100 , 5 , 2.86135311614679 ",
            " 0.9 , 5 , -0.065464169101423 ",
            " 2.61828182845904 , 5 , 0.59804625238886 ",
            " 7.28905609893065 , 5 , 1.23420359580606 ",
            " 19.9855369231877 , 5 , 1.86090363286017 ",
            " 0.267879441171442 , 5 , -0.818433712715006 ",
            " 0.035335283236613 , 5 , -2.07704395633583 ",
            " 1.9 , 5 , 0.398806242361757 ",
            " 4.9 , 5 , 0.987447352170942 ",
            " 9.9 , 5 , 1.42443193330356 ",
            " 99.9 , 5 , 2.86073147033749 ",
            " 1.1 , 5 , 0.059219544331585 ",
            " 2.81828182845904 , 5 , 0.643782161815614 ",
            " 7.48905609893065 , 5 , 1.25102233054648 ",
            " 20.1855369231877 , 5 , 1.8670905729534 ",
            " 0.467879441171442 , 5 , -0.471931607126107 ",
            " 0.235335283236613 , 5 , -0.898912616203567 ",
            " 0.149787068367864 , 5 , -1.17962956069315 ",
            " 2.1 , 5 , 0.46099159153476 ",
            " 5.1 , 5 , 1.01230406413518 ",
            " 10.1 , 5 , 1.43685904624289 ",
            " 100.1 , 5 , 2.86197414062083 ",
            " 1 , 10 , 0 ",
            " 2.71828182845904 , 10 , 0.434294481903252 ",
            " 7.38905609893065 , 10 , 0.868588963806504 ",
            " 20.0855369231877 , 10 , 1.30288344570976 ",
            " 0.367879441171442 , 10 , -0.434294481903252 ",
            " 0.135335283236613 , 10 , -0.868588963806504 ",
            " 0.049787068367864 , 10 , -1.30288344570976 ",
            " 2 , 10 , 0.301029995663981 ",
            " 5 , 10 , 0.698970004336019 ",
            " 10 , 10 , 1 ",
            " 100 , 10 , 2 ",
            " 0.9 , 10 , -0.045757490560675 ",
            " 2.61828182845904 , 10 , 0.418016391625382 ",
            " 7.28905609893065 , 10 , 0.862671292712093 ",
            " 19.9855369231877 , 10 , 1.30071582032919 ",
            " 0.267879441171442 , 10 , -0.572060615725152 ",
            " 0.035335283236613 , 10 , -1.45179142316615 ",
            " 1.9 , 10 , 0.278753600952829 ",
            " 4.9 , 10 , 0.690196080028514 ",
            " 9.9 , 10 , 0.99563519459755 ",
            " 99.9 , 10 , 1.99956548822598 ",
            " 1.1 , 10 , 0.041392685158225 ",
            " 2.81828182845904 , 10 , 0.449984420435711 ",
            " 7.48905609893065 , 10 , 0.874427083806527 ",
            " 20.1855369231877 , 10 , 1.30504030587298 ",
            " 0.467879441171442 , 10 , -0.329866037479239 ",
            " 0.235335283236613 , 10 , -0.628312955245509 ",
            " 0.149787068367864 , 10 , -0.824525679152586 ",
            " 2.1 , 10 , 0.322219294733919 ",
            " 5.1 , 10 , 0.707570176097936 ",
            " 10.1 , 10 , 1.00432137378264 ",
            " 100.1 , 10 , 2.00043407747932 ",
        ]
    )
    fun testLog(x: Double, base: Double, expected: Double) {
        Assertions.assertEquals(expected, Algebra(0.01).log(x, base), 0.1 * abs(expected))
    }

    @ParameterizedTest
    @CsvSource(
        value = [
            " 1 , 0 ",
            " 2.71828182845904 , 1.44269504088896 ",
            " 7.38905609893065 , 2.88539008177793 ",
            " 20.0855369231877 , 4.32808512266689 ",
            " 0.367879441171442 , -1.44269504088896 ",
            " 0.135335283236613 , -2.88539008177793 ",
            " 0.049787068367864 , -4.32808512266689 ",
            " 2 , 1 ",
            " 5 , 2.32192809488736 ",
            " 10 , 3.32192809488736 ",
            " 100 , 6.64385618977473 ",
            " 0.9 , -0.15200309344505 ",
            " 2.61828182845904 , 1.38862039546379 ",
            " 7.28905609893065 , 2.8657320039131 ",
            " 19.9855369231877 , 4.32088442701599 ",
            " 0.267879441171442 , -1.90034423135595 ",
            " 0.035335283236613 , -4.82274671653216 ",
            " 1.9 , 0.925999418556223 ",
            " 4.9 , 2.29278174922785 ",
            " 9.9 , 3.30742852519225 ",
            " 99.9 , 6.64241277290506 ",
            " 1.1 , 0.137503523749935 ",
            " 2.81828182845904 , 1.494815888507 ",
            " 7.48905609893065 , 2.90478389662733 ",
            " 20.1855369231877 , 4.33525005703984 ",
            " 0.467879441171442 , -1.09579125745145 ",
            " 0.235335283236613 , -2.08721045841176 ",
            " 0.149787068367864 , -2.73901501853306 ",
            " 2.1 , 1.0703893278914 ",
            " 5.1 , 2.35049724708413 ",
            " 10.1 , 3.33628338786443 ",
            " 100.1 , 6.64529816394863 ",
        ]
    )
    fun testLog2(x: Double, expected: Double) {
        Assertions.assertEquals(expected, Algebra(0.01).log(x, 2.0), 0.1 * abs(expected))
    }

    @ParameterizedTest
    @CsvSource(
        value = [
            " 1 , 0 ",
            " 2.71828182845904 , 0.621334934559612 ",
            " 7.38905609893065 , 1.24266986911922 ",
            " 20.0855369231877 , 1.86400480367884 ",
            " 0.367879441171442 , -0.621334934559612 ",
            " 0.135335283236613 , -1.24266986911922 ",
            " 0.049787068367864 , -1.86400480367884 ",
            " 2 , 0.430676558073393 ",
            " 5 , 1 ",
            " 10 , 1.43067655807339 ",
            " 100 , 2.86135311614679 ",
            " 0.9 , -0.065464169101423 ",
            " 2.61828182845904 , 0.59804625238886 ",
            " 7.28905609893065 , 1.23420359580606 ",
            " 19.9855369231877 , 1.86090363286017 ",
            " 0.267879441171442 , -0.818433712715006 ",
            " 0.035335283236613 , -2.07704395633583 ",
            " 1.9 , 0.398806242361757 ",
            " 4.9 , 0.987447352170942 ",
            " 9.9 , 1.42443193330356 ",
            " 99.9 , 2.86073147033749 ",
            " 1.1 , 0.059219544331585 ",
            " 2.81828182845904 , 0.643782161815614 ",
            " 7.48905609893065 , 1.25102233054648 ",
            " 20.1855369231877 , 1.8670905729534 ",
            " 0.467879441171442 , -0.471931607126107 ",
            " 0.235335283236613 , -0.898912616203567 ",
            " 0.149787068367864 , -1.17962956069315 ",
            " 2.1 , 0.46099159153476 ",
            " 5.1 , 1.01230406413518 ",
            " 10.1 , 1.43685904624289 ",
            " 100.1 , 2.86197414062083 ",
        ]
    )
    fun testLog5(x: Double, expected: Double) {
        Assertions.assertEquals(expected, Algebra(0.01).log(x, 5.0), 0.1 * abs(expected))
    }

    @ParameterizedTest
    @CsvSource(
        value = [
            " 1 , 0 ",
            " 2.71828182845904 , 0.434294481903252 ",
            " 7.38905609893065 , 0.868588963806504 ",
            " 20.0855369231877 , 1.30288344570976 ",
            " 0.367879441171442 , -0.434294481903252 ",
            " 0.135335283236613 , -0.868588963806504 ",
            " 0.049787068367864 , -1.30288344570976 ",
            " 2 , 0.301029995663981 ",
            " 5 , 0.698970004336019 ",
            " 10 , 1 ",
            " 100 , 2 ",
            " 0.9 , -0.045757490560675 ",
            " 2.61828182845904 , 0.418016391625382 ",
            " 7.28905609893065 , 0.862671292712093 ",
            " 19.9855369231877 , 1.30071582032919 ",
            " 0.267879441171442 , -0.572060615725152 ",
            " 0.035335283236613 , -1.45179142316615 ",
            " 1.9 , 0.278753600952829 ",
            " 4.9 , 0.690196080028514 ",
            " 9.9 , 0.99563519459755 ",
            " 99.9 , 1.99956548822598 ",
            " 1.1 , 0.041392685158225 ",
            " 2.81828182845904 , 0.449984420435711 ",
            " 7.48905609893065 , 0.874427083806527 ",
            " 20.1855369231877 , 1.30504030587298 ",
            " 0.467879441171442 , -0.329866037479239 ",
            " 0.235335283236613 , -0.628312955245509 ",
            " 0.149787068367864 , -0.824525679152586 ",
            " 2.1 , 0.322219294733919 ",
            " 5.1 , 0.707570176097936 ",
            " 10.1 , 1.00432137378264 ",
            " 100.1 , 2.00043407747932 ",
        ]
    )
    fun testLog10(x: Double, expected: Double) {
        Assertions.assertEquals(expected, Algebra(0.01).log(x, 10.0), 0.1 * abs(expected))
    }

    @ParameterizedTest
    @CsvSource(
        value = [
            " -31.1017672705389 , -235.81978742015 ",
            " -30.78760800518 , -4.31843293955864 ",
            " -30.473448739821 , 3.87230844287776 ",
            " -30.159289474462 , 10.1686212299761 ",
            " -29.5309709437441 , -5.12983804223034 ",
            " -29.2168116783851 , 5.9705729389541 ",
            " -28.9026524130261 , 48.6001061263533 ",
            " -28.5884931476671 , 1276.07338625533 ",
            " -27.9601746169492 , -650.642838870753 ",
            " -27.6460153515902 , -0.620371708503688 ",
            " -27.3318560862312 , 31.7742918097782 ",
            " -27.0176968208722 , 155.908229916381 ",
            " -26.3893782901543 , 150.676644352174 ",
            " -26.0752190247953 , 31.5971093551115 ",
            " -25.7610597594363 , 20.7650410654088 ",
            " -25.4469004940773 , 408.424957488909 ",
            " -24.8185819633594 , -235.819787420151 ",
            " -24.5044226980004 , -4.31843293955866 ",
            " -24.1902634326414 , 3.87230844287776 ",
            " -23.8761041672824 , 10.1686212299761 ",
            " -23.2477856365645 , -5.12983804223035 ",
            " -22.9336263712055 , 5.97057293895409 ",
            " -22.6194671058465 , 48.6001061263532 ",
            " -22.3053078404875 , 1276.07338625532 ",
            " -21.6769893097696 , -650.642838870756 ",
            " -21.3628300444106 , -0.620371708503729 ",
            " -21.0486707790516 , 31.7742918097782 ",
            " -20.7345115136926 , 155.908229916381 ",
            " -20.1061929829747 , 150.676644352174 ",
            " -19.7920337176157 , 31.5971093551116 ",
            " -19.4778744522567 , 20.7650410654088 ",
            " -19.1637151868977 , 408.424957488907 ",
            " -18.5353966561798 , -235.819787420152 ",
            " -18.2212373908208 , -4.31843293955867 ",
            " -17.9070781254618 , 3.87230844287776 ",
            " -17.5929188601028 , 10.1686212299761 ",
            " -16.9646003293849 , -5.12983804223036 ",
            " -16.6504410640259 , 5.97057293895407 ",
            " -16.3362817986669 , 48.6001061263532 ",
            " -16.0221225333079 , 1276.07338625532 ",
            " -15.39380400259 , -650.642838870738 ",
            " -15.079644737231 , -0.620371708503768 ",
            " -14.765485471872 , 31.7742918097779 ",
            " -14.451326206513 , 155.908229916381 ",
            " -13.8230076757951 , 150.676644352174 ",
            " -13.5088484104361 , 31.5971093551118 ",
            " -13.1946891450771 , 20.7650410654088 ",
            " -12.8805298797182 , 408.424957488917 ",
            " -12.2522113490002 , -235.81978742016 ",
            " -11.9380520836412 , -4.31843293955869 ",
            " -11.6238928182822 , 3.87230844287778 ",
            " -11.3097335529233 , 10.168621229976 ",
            " -10.6814150222053 , -5.12983804223037 ",
            " -10.3672557568463 , 5.97057293895414 ",
            " -10.0530964914873 , 48.6001061263531 ",
            " -9.73893722612836 , 1276.07338625528 ",
            " -9.1106186954104 , -650.642838870741 ",
            " -8.79645943005142 , -0.620371708503798 ",
            " -8.48230016469244 , 31.7742918097778 ",
            " -8.16814089933346 , 155.908229916381 ",
            " -7.5398223686155 , 150.676644352175 ",
            " -7.22566310325652 , 31.5971093551118 ",
            " -6.91150383789755 , 20.7650410654088 ",
            " -6.59734457253857 , 408.424957488915 ",
            " -5.96902604182061 , -235.819787420161 ",
            " -5.65486677646163 , -4.3184329395587 ",
            " -5.34070751110265 , 3.87230844287778 ",
            " -5.02654824574367 , 10.168621229976 ",
            " -4.39822971502571 , -5.12983804223038 ",
            " -4.08407044966673 , 5.97057293895413 ",
            " -3.76991118430775 , 48.600106126353 ",
            " -3.45575191894877 , 1276.07338625527 ",
            " -2.82743338823081 , -650.642838870745 ",
            " -2.51327412287183 , -0.620371708503827 ",
            " -2.19911485751286 , 31.7742918097778 ",
            " -1.88495559215388 , 155.90822991638 ",
            " -1.25663706143592 , 150.676644352175 ",
            " -0.942477796076938 , 31.5971093551119 ",
            " -0.628318530717959 , 20.7650410654088 ",
            " -0.314159265358979 , 408.424957488914 ",
            " 0.1 , 6.44828237688259 ",
            " 0.2 , 3.90301490280937 ",
            " 0.3 , 2.80274065193476 ",
            " 0.4 , 2.17608547054653 ",
            " 0.5 , 1.77050492836856 ",
            " 0.6 , 1.48762282283371 ",
            " 0.7 , 1.28038310041634 ",
            " 0.8 , 1.12321122640671 ",
            " 0.9 , 1.00092903192573 ",
            " 1.1 , 0.825812106022033 ",
            " 1.2 , 0.762160122951545 ",
            " 1.3 , 0.70981026868108 ",
            " 1.4 , 0.666443527123439 ",
            " 1.5 , 0.630320045481798 ",
            " 1.6 , 0.600109316702555 ",
            " 1.7 , 0.574776931049792 ",
            " 1.8 , 0.553507006783634 ",
            " 1.9 , 0.535647807721613 ",
            " 2 , 0.520672828365283 ",
            " 2.1 , 0.50815243763536 ",
            " 2.2 , 0.497732879240477 ",
            " 2.3 , 0.489120492411693 ",
            " 2.4 , 0.482069698600904 ",
            " 2.5 , 0.476373745730505 ",
            " 2.6 , 0.471857499149465 ",
            " 2.7 , 0.468371770607193 ",
            " 2.8 , 0.465788816173197 ",
            " 2.9 , 0.463998731919583 ",
            " 3 , 0.462906545773872 ",
            " 3.1 , 0.4624298540588 ",
            " 3.2 , 0.462496887746711 ",
            " 3.3 , 0.463044920352874 ",
            " 3.4 , 0.464018949409741 ",
            " 3.5 , 0.465370598505007 ",
            " 3.6 , 0.467057198268925 ",
            " 3.7 , 0.469041013413384 ",
            " 3.8 , 0.471288589641753 ",
            " 3.9 , 0.473770199462038 ",
            " 4 , 0.476459370011064 ",
            " 4.1 , 0.479332479203779 ",
            " 4.2 , 0.48236840906042 ",
            " 4.3 , 0.485548247086027 ",
            " 4.4 , 0.488855028196039 ",
            " 4.5 , 0.492273510985407 ",
            " 4.6 , 0.495789983193699 ",
            " 4.7 , 0.499392092076523 ",
            " 4.8 , 0.50306869609443 ",
            " 4.9 , 0.5068097349054 ",
            " 5 , 0.510606115120799 ",
            " 5.1 , 0.514449609676562 ",
            " 5.2 , 0.518332768996795 ",
            " 5.3 , 0.52224884239823 ",
            " 5.4 , 0.526191708410838 ",
            " 5.5 , 0.530155812880288 ",
            " 5.6 , 0.534136113878261 ",
            " 5.7 , 0.538128032582023 ",
            " 5.8 , 0.542127409399377 ",
            " 5.9 , 0.54613046471255 ",
            " 6 , 0.550133763697632 ",
            " 6.1 , 0.55413418474709 ",
            " 6.2 , 0.558128891083654 ",
            " 6.3 , 0.562115305206034 ",
            " 6.4 , 0.566091085851819 ",
            " 6.5 , 0.570054107201668 ",
            " 6.6 , 0.574002440082394 ",
            " 6.7 , 0.577934334955561 ",
            " 6.8 , 0.58184820650344 ",
            " 6.9 , 0.5857426196461 ",
            " 7 , 0.589616276842548 ",
            " 7.1 , 0.59346800654553 ",
            " 7.2 , 0.597296752694243 ",
            " 7.3 , 0.601101565142043 ",
            " 7.4 , 0.604881590927474 ",
            " 7.5 , 0.608636066306879 ",
            " 7.6 , 0.612364309475594 ",
            " 7.7 , 0.616065713912406 ",
            " 7.8 , 0.619739742288831 ",
            " 7.9 , 0.623385920890746 ",
            " 8 , 0.627003834505313 ",
            " 8.1 , 0.630593121730861 ",
            " 8.2 , 0.63415347067163 ",
            " 8.3 , 0.63768461498306 ",
            " 8.4 , 0.641186330236644 ",
            " 8.5 , 0.644658430576378 ",
            " 8.6 , 0.648100765641531 ",
            " 8.7 , 0.651513217732833 ",
            " 8.8 , 0.654895699201362 ",
            " 8.9 , 0.658248150041309 ",
            " 9 , 0.661570535669567 ",
            " 9.1 , 0.664862844876616 ",
            " 9.2 , 0.668125087934616 ",
            " 9.3 , 0.671357294849845 ",
            " 9.4 , 0.674559513747803 ",
            " 9.5 , 0.677731809380295 ",
            " 9.6 , 0.680874261744768 ",
            " 9.7 , 0.683986964807003 ",
            " 9.8 , 0.687070025319035 ",
            " 9.9 , 0.69012356172485 ",
            " 10 , 0.693147703147079 ",
        ]
    )
    fun testSuperFun(x: Double, expected: Double) {
        Assertions.assertEquals(expected, Algebra(0.01).superFun(x), 0.1 * abs(expected))
    }

    @ParameterizedTest
    @ValueSource(
        doubles = [
            -31.4159265358979,
            -29.845130209103,
            -28.2743338823081,
            -26.7035375555132,
            -25.1327412287183,
            -23.5619449019234,
            -21.9911485751286,
            -20.4203522483337,
            -18.8495559215388,
            -17.2787595947439,
            -15.707963267949,
            -14.1371669411541,
            -12.5663706143592,
            -10.9955742875643,
            -9.42477796076938,
            -7.85398163397448,
            -6.28318530717959,
            -4.71238898038469,
            -3.14159265358979,
            -1.5707963267949,
            0.0, 1.0,
        ]
    )
    fun testSuperFunNanOrInfinity(x: Double) {
        val t = Algebra(0.01).superFun(x)
        Assertions.assertTrue(t.isNaN() || abs(t) > 1e4)
    }
}
